cmake_minimum_required(VERSION 3.30)

project(APP)

file(GLOB SOR_LIST 
                    ${CMAKE_CURRENT_SOURCE_DIR}/source/*.cpp
                    E:/lib_c/glad/src/*.c)
message(STATUS ${SOR_LIST})
file(GLOB HEADER ${PROJECT_SOURCE_DIR}/include/*.hpp ${PROJECT_SOURCE_DIR}/include/*.h)
message(STATUS ${HEADER})
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/build/bin)


add_executable(app ${SOR_LIST})
# find_package用法
find_library(MY_LIB
             NAMES glfw3
             PATHS E:/lib_c/glfw-3.4/build_mingw/src)   
if(MY_LIB)
    message(STATUS "Found mylib: ${MY_LIB}")
    target_link_libraries(app PRIVATE ${MY_LIB})
else()
    message(FATAL_ERROR "mylib not found")
endif()
# message(FATAL_ERROR ${PROJECT_SOURCE_DIR}/include)
# 指定头文件路径
target_include_directories(app PUBLIC 
                            ../include
                            E:/lib_c/glfw-3.4/include
                            E:/lib_c/glad/include)


